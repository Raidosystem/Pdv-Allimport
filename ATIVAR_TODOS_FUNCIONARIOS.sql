-- üîß CORRIGIR: Ativar todos os funcion√°rios que deveriam estar ativos

-- ‚úÖ 1. Ver funcion√°rios que precisam ser ativados
SELECT 
  '‚ö†Ô∏è FUNCION√ÅRIOS INATIVOS' as status,
  f.id,
  f.nome,
  f.empresa_id,
  f.usuario_ativo,
  f.tipo_admin,
  e.nome as empresa_nome,
  CASE 
    WHEN EXISTS (SELECT 1 FROM login_funcionarios lf WHERE lf.funcionario_id = f.id) 
    THEN '‚úÖ TEM LOGIN'
    ELSE '‚ùå SEM LOGIN'
  END as tem_login
FROM funcionarios f
JOIN empresas e ON e.id = f.empresa_id
WHERE (f.usuario_ativo IS NULL OR f.usuario_ativo = FALSE)
AND f.tipo_admin != 'admin_empresa'
ORDER BY f.created_at DESC;

-- ‚úÖ 2. ATIVAR todos os funcion√°rios n√£o-admin
UPDATE funcionarios
SET 
  usuario_ativo = TRUE,
  senha_definida = TRUE,
  primeiro_acesso = FALSE
WHERE (usuario_ativo IS NULL OR usuario_ativo = FALSE)
AND tipo_admin != 'admin_empresa';

-- ‚úÖ 3. Verificar resultado
SELECT 
  '‚úÖ DEPOIS DA CORRE√á√ÉO' as status,
  COUNT(*) as total_funcionarios_ativos
FROM funcionarios
WHERE usuario_ativo = TRUE
AND tipo_admin != 'admin_empresa';

-- ‚úÖ 4. Verificar funcion√°rios SEM login
SELECT 
  '‚ö†Ô∏è FUNCION√ÅRIOS SEM LOGIN' as problema,
  f.id,
  f.nome,
  f.empresa_id,
  f.usuario_ativo,
  e.nome as empresa_nome
FROM funcionarios f
JOIN empresas e ON e.id = f.empresa_id
LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
WHERE f.usuario_ativo = TRUE
AND lf.id IS NULL
AND f.tipo_admin != 'admin_empresa';

-- ‚úÖ 5. Testar fun√ß√£o listar_usuarios_ativos novamente
SELECT 
  'üß™ TESTE FUN√á√ÉO AP√ìS CORRE√á√ÉO' as teste,
  e.id as empresa_id,
  e.nome as empresa_nome,
  (
    SELECT COUNT(*) 
    FROM listar_usuarios_ativos(e.id)
  ) as usuarios_ativos_agora
FROM empresas e
WHERE (
  SELECT COUNT(*) 
  FROM funcionarios f
  WHERE f.empresa_id = e.id 
  AND f.usuario_ativo = TRUE
  AND f.tipo_admin != 'admin_empresa'
) > 0
ORDER BY e.created_at DESC;

-- üìä RESUMO FINAL
SELECT 
  'üìä RESULTADO FINAL' as titulo,
  (SELECT COUNT(*) FROM funcionarios WHERE usuario_ativo = TRUE) as total_ativos,
  (SELECT COUNT(*) FROM funcionarios WHERE usuario_ativo = TRUE AND tipo_admin != 'admin_empresa') as funcionarios_ativos,
  (SELECT COUNT(*) FROM login_funcionarios) as total_logins,
  (
    SELECT COUNT(*) FROM funcionarios f
    LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
    WHERE f.usuario_ativo = TRUE
    AND lf.id IS NULL
    AND f.tipo_admin != 'admin_empresa'
  ) as funcionarios_sem_login;

-- üéØ PR√ìXIMO PASSO
SELECT 
  'üéØ SE AINDA H√Å FUNCION√ÅRIOS SEM LOGIN' as titulo,
  'Execute o script CRIAR_LOGINS_FALTANTES.sql' as acao,
  'Isso criar√° usu√°rios para todos os funcion√°rios ativos' as resultado;
