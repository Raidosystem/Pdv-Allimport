-- üéØ SOLU√á√ÉO: Permitir m√∫ltiplos NULL na constraint

-- ‚ö†Ô∏è PROBLEMA ATUAL:
-- A constraint 'funcionarios_empresa_id_email_key' impede:
-- - Criar m√∫ltiplos funcion√°rios com email = NULL para a mesma empresa
-- - Mas precisamos criar funcion√°rios SEM email!

-- ‚úÖ SOLU√á√ÉO:
-- Dropar a constraint antiga e criar uma nova que:
-- - Permite UNIQUE apenas quando email N√ÉO √© NULL
-- - Permite m√∫ltiplos NULL (PostgreSQL permite por padr√£o em UNIQUE)

-- 1. Dropar constraint antiga
ALTER TABLE funcionarios 
DROP CONSTRAINT IF EXISTS funcionarios_empresa_id_email_key;

-- 2. Criar constraint parcial (s√≥ valida quando email n√£o √© NULL)
CREATE UNIQUE INDEX funcionarios_empresa_id_email_unique
ON funcionarios (empresa_id, email)
WHERE email IS NOT NULL;

-- 3. Verificar resultado
SELECT 
  '‚úÖ Constraint atualizada' as status,
  'Agora pode criar funcion√°rios sem email' as resultado;

-- 4. Testar: Ver quantos funcion√°rios sem email existem
SELECT 
  'üìä Funcion√°rios SEM email' as tipo,
  empresa_id,
  COUNT(*) as total
FROM funcionarios
WHERE email IS NULL
GROUP BY empresa_id
ORDER BY total DESC
LIMIT 10;

-- 5. Ver constraint nova
SELECT
  indexname,
  indexdef
FROM pg_indexes
WHERE tablename = 'funcionarios'
AND indexname LIKE '%email%';
