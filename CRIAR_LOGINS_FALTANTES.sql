-- üîß CRIAR LOGINS para funcion√°rios que n√£o t√™m

-- ‚úÖ 1. Ver funcion√°rios que precisam de login
SELECT 
  '‚ö†Ô∏è FUNCION√ÅRIOS SEM LOGIN' as status,
  f.id,
  f.nome,
  f.empresa_id,
  f.usuario_ativo,
  e.nome as empresa_nome
FROM funcionarios f
JOIN empresas e ON e.id = f.empresa_id
LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
WHERE f.usuario_ativo = TRUE
AND lf.id IS NULL
AND f.tipo_admin != 'admin_empresa'
ORDER BY e.nome, f.nome;

-- ‚úÖ 2. CRIAR logins automaticamente
-- Gera usu√°rio a partir do nome (remove espa√ßos e acentos)
INSERT INTO login_funcionarios (funcionario_id, usuario, senha, ativo)
SELECT 
  f.id as funcionario_id,
  LOWER(
    REGEXP_REPLACE(
      TRANSLATE(
        f.nome,
        '√Å√Ä√É√Ç√Ñ√°√†√£√¢√§√â√à√ä√ã√©√®√™√´√ç√å√é√è√≠√¨√Æ√Ø√ì√í√ï√î√ñ√≥√≤√µ√¥√∂√ö√ô√õ√ú√∫√π√ª√º√á√ß',
        'AAAAAaaaaaEEEEeeeeIIIIiiiiOOOOOoooooUUUUuuuuCc'
      ),
      '[^a-zA-Z0-9]',
      '',
      'g'
    )
  ) as usuario,
  encode(digest('senha123', 'sha256'), 'base64') as senha, -- Senha padr√£o tempor√°ria
  TRUE as ativo
FROM funcionarios f
LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
WHERE f.usuario_ativo = TRUE
AND lf.id IS NULL
AND f.tipo_admin != 'admin_empresa'
ON CONFLICT (usuario) DO NOTHING;

-- ‚úÖ 3. Verificar logins criados
SELECT 
  '‚úÖ LOGINS CRIADOS' as status,
  lf.id,
  lf.usuario,
  lf.ativo,
  f.nome as funcionario_nome,
  e.nome as empresa_nome
FROM login_funcionarios lf
JOIN funcionarios f ON f.id = lf.funcionario_id
JOIN empresas e ON e.id = f.empresa_id
WHERE lf.created_at > NOW() - INTERVAL '1 minute'
ORDER BY lf.created_at DESC;

-- ‚úÖ 4. Verificar se ainda h√° funcion√°rios sem login
SELECT 
  '‚ö†Ô∏è AINDA SEM LOGIN?' as status,
  COUNT(*) as total_sem_login
FROM funcionarios f
LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
WHERE f.usuario_ativo = TRUE
AND lf.id IS NULL
AND f.tipo_admin != 'admin_empresa';

-- ‚úÖ 5. Testar fun√ß√£o listar_usuarios_ativos para cada empresa
SELECT 
  'üß™ TESTE FUN√á√ÉO FINAL' as teste,
  e.id as empresa_id,
  e.nome as empresa_nome,
  e.email as empresa_email,
  (
    SELECT COUNT(*) 
    FROM listar_usuarios_ativos(e.id)
  ) as usuarios_visiveis_no_login,
  (
    SELECT COUNT(*)
    FROM funcionarios f
    WHERE f.empresa_id = e.id
    AND f.usuario_ativo = TRUE
    AND f.tipo_admin != 'admin_empresa'
  ) as funcionarios_esperados
FROM empresas e
ORDER BY e.created_at DESC;

-- üìä RESUMO FINAL
SELECT 
  'üìä RESUMO COMPLETO' as titulo,
  (SELECT COUNT(*) FROM empresas) as total_empresas,
  (SELECT COUNT(*) FROM funcionarios WHERE usuario_ativo = TRUE AND tipo_admin != 'admin_empresa') as funcionarios_ativos,
  (SELECT COUNT(*) FROM login_funcionarios) as total_logins_criados,
  (
    SELECT COUNT(*) FROM funcionarios f
    LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
    WHERE f.usuario_ativo = TRUE
    AND lf.id IS NULL
    AND f.tipo_admin != 'admin_empresa'
  ) as ainda_faltam_logins,
  CASE 
    WHEN (
      SELECT COUNT(*) FROM funcionarios f
      LEFT JOIN login_funcionarios lf ON lf.funcionario_id = f.id
      WHERE f.usuario_ativo = TRUE
      AND lf.id IS NULL
      AND f.tipo_admin != 'admin_empresa'
    ) = 0 THEN '‚úÖ TUDO CERTO!'
    ELSE '‚ö†Ô∏è Ainda faltam logins'
  END as status;

-- üéØ PR√ìXIMOS PASSOS
SELECT 
  'üéØ PR√ìXIMO PASSO' as titulo,
  'Recarregue a p√°gina de login (F5)' as acao_1,
  'Os funcion√°rios devem aparecer agora' as acao_2,
  'Senha padr√£o tempor√°ria: senha123' as acao_3,
  'Pe√ßa para os funcion√°rios trocarem a senha ap√≥s o primeiro login' as acao_4;
