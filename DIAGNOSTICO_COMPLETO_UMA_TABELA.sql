-- ========================================
-- üö® DIAGN√ìSTICO COMPLETO EM UMA √öNICA CONSULTA
-- Vai mostrar TUDO em uma tabela s√≥
-- ========================================

WITH diagnostico_completo AS (
  -- 1. Contexto de execu√ß√£o
  SELECT 
    1 as ordem,
    'üîç CONTEXTO' as categoria,
    'database_user' as item,
    current_user as valor,
    CASE 
      WHEN current_user = 'postgres' THEN '‚ùå POSTGRES (BYPASS TOTAL)'
      WHEN current_user LIKE '%service_role%' THEN '‚ùå SERVICE ROLE (BYPASS TOTAL)'
      ELSE '‚úÖ USU√ÅRIO NORMAL'
    END as status
  
  UNION ALL
  
  SELECT 
    1 as ordem,
    'üîç CONTEXTO' as categoria,
    'is_superuser' as item,
    current_setting('is_superuser') as valor,
    CASE 
      WHEN current_setting('is_superuser') = 'on' THEN '‚ùå SUPERUSER (BYPASS RLS)'
      ELSE '‚úÖ USU√ÅRIO NORMAL'
    END as status
  
  UNION ALL
  
  -- 2. Autentica√ß√£o Supabase
  SELECT 
    2 as ordem,
    'üë§ AUTH SUPABASE' as categoria,
    'auth.uid()' as item,
    COALESCE(auth.uid()::text, 'NULL') as valor,
    CASE 
      WHEN auth.uid() IS NULL THEN '‚ùå SEM AUTENTICA√á√ÉO'
      ELSE '‚úÖ AUTENTICADO'
    END as status
  
  UNION ALL
  
  SELECT 
    2 as ordem,
    'üë§ AUTH SUPABASE' as categoria,
    'auth.email()' as item,
    COALESCE(auth.email(), 'NULL') as valor,
    CASE 
      WHEN auth.email() IS NULL THEN '‚ùå SEM EMAIL'
      ELSE '‚úÖ EMAIL OK'
    END as status
  
  UNION ALL
  
  -- 3. Status RLS das tabelas
  SELECT 
    3 as ordem,
    'üîí RLS STATUS' as categoria,
    'produtos' as item,
    CASE WHEN rowsecurity THEN 'ATIVO' ELSE 'INATIVO' END as valor,
    CASE 
      WHEN rowsecurity THEN '‚úÖ RLS ATIVO'
      ELSE '‚ùå RLS INATIVO'
    END as status
  FROM pg_tables 
  WHERE schemaname = 'public' AND tablename = 'produtos'
  
  UNION ALL
  
  SELECT 
    3 as ordem,
    'üîí RLS STATUS' as categoria,
    'clientes' as item,
    CASE WHEN rowsecurity THEN 'ATIVO' ELSE 'INATIVO' END as valor,
    CASE 
      WHEN rowsecurity THEN '‚úÖ RLS ATIVO'
      ELSE '‚ùå RLS INATIVO'
    END as status
  FROM pg_tables 
  WHERE schemaname = 'public' AND tablename = 'clientes'
  
  UNION ALL
  
  -- 4. Contagem de pol√≠ticas
  SELECT 
    4 as ordem,
    'üîë POL√çTICAS' as categoria,
    'produtos_policies' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ùå SEM POL√çTICAS'
      ELSE '‚úÖ TEM POL√çTICAS'
    END as status
  FROM pg_policies 
  WHERE schemaname = 'public' AND tablename = 'produtos'
  
  UNION ALL
  
  -- 5. Teste de ownership
  SELECT 
    5 as ordem,
    'üìä OWNERSHIP PRODUTOS' as categoria,
    'produtos_meus' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ùå NENHUM PRODUTO MEU'
      ELSE '‚úÖ TENHO PRODUTOS'
    END as status
  FROM produtos 
  WHERE user_id = auth.uid()
  
  UNION ALL
  
  SELECT 
    5 as ordem,
    'üìä OWNERSHIP PRODUTOS' as categoria,
    'produtos_outros' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚úÖ N√ÉO VEJO OUTROS'
      ELSE '‚ùå VEJO PRODUTOS DE OUTROS'
    END as status
  FROM produtos 
  WHERE user_id != auth.uid() OR user_id IS NULL
  
  UNION ALL
  
  SELECT 
    5 as ordem,
    'üìä OWNERSHIP PRODUTOS' as categoria,
    'produtos_total_visiveis' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ö†Ô∏è NENHUM PRODUTO VIS√çVEL'
      WHEN COUNT(*) > 100 THEN '‚ùå MUITOS PRODUTOS (VAZAMENTO)'
      ELSE '‚úÖ QUANTIDADE NORMAL'
    END as status
  FROM produtos
  
  UNION ALL
  
  -- 6. Compara√ß√£o de IDs
  SELECT 
    6 as ordem,
    'üÜî COMPARA√á√ÉO IDs' as categoria,
    'meu_user_id' as item,
    COALESCE(auth.uid()::text, 'NULL') as valor,
    'üìã REFER√äNCIA' as status
  
  UNION ALL
  
  SELECT 
    6 as ordem,
    'üÜî COMPARA√á√ÉO IDs' as categoria,
    'primeiro_produto_user_id' as item,
    COALESCE((SELECT user_id::text FROM produtos LIMIT 1), 'NULL') as valor,
    CASE 
      WHEN (SELECT user_id FROM produtos LIMIT 1) = auth.uid() THEN '‚úÖ √â MEU'
      WHEN (SELECT user_id FROM produtos LIMIT 1) IS NULL THEN '‚ùå SEM DONO'
      ELSE '‚ùå √â DE OUTRO'
    END as status
)

SELECT 
  categoria,
  item,
  valor,
  status,
  CASE 
    WHEN status LIKE '‚ùå%' THEN 'üö® PROBLEMA'
    WHEN status LIKE '‚úÖ%' THEN '‚úÖ OK'
    WHEN status LIKE '‚ö†Ô∏è%' THEN '‚ö†Ô∏è ATEN√á√ÉO'
    ELSE 'üìã INFO'
  END as prioridade
FROM diagnostico_completo 
ORDER BY ordem, categoria, item;