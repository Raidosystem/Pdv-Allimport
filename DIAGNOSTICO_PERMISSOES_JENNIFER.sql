-- üîç DIAGN√ìSTICO - POR QUE JENNIFER TEM ADMIN TOTAL?

-- ====================================
-- 1. VERIFICAR DADOS DA JENNIFER
-- ====================================
SELECT 
  'üë§ JENNIFER - DADOS B√ÅSICOS' as info,
  id,
  nome,
  email,
  tipo_admin,
  funcao_id,
  usuario_ativo,
  senha_definida
FROM funcionarios
WHERE nome = 'Jennifer Sousa';

-- ====================================
-- 2. VERIFICAR FUN√á√ÉO DA JENNIFER
-- ====================================
SELECT 
  'üîë JENNIFER - FUN√á√ÉO ATRIBU√çDA' as info,
  f.id as funcionario_id,
  f.nome as funcionario_nome,
  f.funcao_id,
  func.id as funcao_id_real,
  func.nome as funcao_nome,
  func.descricao as funcao_descricao
FROM funcionarios f
LEFT JOIN funcoes func ON func.id = f.funcao_id
WHERE f.nome = 'Jennifer Sousa';

-- ====================================
-- 3. VERIFICAR PERMISS√ïES DA FUN√á√ÉO DA JENNIFER
-- ====================================
SELECT 
  'üìã PERMISS√ïES DA FUN√á√ÉO DE JENNIFER' as info,
  func.nome as funcao_nome,
  p.recurso,
  p.acao,
  p.descricao,
  fp.id as funcao_permissao_id
FROM funcionarios f
LEFT JOIN funcoes func ON func.id = f.funcao_id
LEFT JOIN funcao_permissoes fp ON fp.funcao_id = func.id
LEFT JOIN permissoes p ON p.id = fp.permissao_id
WHERE f.nome = 'Jennifer Sousa'
ORDER BY p.recurso, p.acao;

-- ====================================
-- 4. VERIFICAR SE JENNIFER EST√Å EM funcionario_funcoes
-- ====================================
SELECT 
  'üîó JENNIFER - funcionario_funcoes' as info,
  f.id as funcionario_id,
  f.funcao_id as funcao_id_direto,
  'Tabela funcionario_funcoes pode n√£o existir' as nota
FROM funcionarios f
WHERE f.nome = 'Jennifer Sousa';

-- ====================================
-- 5. VERIFICAR TODAS AS FUN√á√ïES DISPON√çVEIS
-- ====================================
SELECT 
  'üìö TODAS AS FUN√á√ïES' as info,
  id,
  nome,
  descricao,
  empresa_id
FROM funcoes
WHERE empresa_id = 'f1726fcf-d23b-4cca-8079-39314ae56e00'
ORDER BY nome;

-- ====================================
-- 6. CONTAR PERMISS√ïES POR FUN√á√ÉO
-- ====================================
SELECT 
  'üìä PERMISS√ïES POR FUN√á√ÉO' as info,
  func.nome as funcao_nome,
  COUNT(fp.id) as total_permissoes
FROM funcoes func
LEFT JOIN funcao_permissoes fp ON fp.funcao_id = func.id
WHERE func.empresa_id = 'f1726fcf-d23b-4cca-8079-39314ae56e00'
GROUP BY func.id, func.nome
ORDER BY func.nome;

-- ====================================
-- 7. VERIFICAR SE PROBLEMA √â NO tipo_admin
-- ====================================
SELECT 
  '‚ö†Ô∏è AN√ÅLISE DO PROBLEMA' as info,
  f.nome,
  f.tipo_admin,
  CASE 
    WHEN f.tipo_admin = 'admin_empresa' THEN '‚ùå PROBLEMA: Jennifer est√° como admin_empresa'
    WHEN f.tipo_admin = 'funcionario' THEN '‚úÖ OK: Jennifer √© funcion√°rio'
    ELSE '‚ö†Ô∏è ATEN√á√ÉO: tipo_admin desconhecido'
  END as diagnostico,
  CASE
    WHEN f.funcao_id IS NULL THEN '‚ùå PROBLEMA: Jennifer sem fun√ß√£o atribu√≠da'
    ELSE '‚úÖ OK: Jennifer tem fun√ß√£o'
  END as tem_funcao
FROM funcionarios f
WHERE f.nome = 'Jennifer Sousa';
