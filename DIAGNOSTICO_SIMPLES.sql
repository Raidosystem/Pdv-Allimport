-- ========================================
-- üö® DIAGN√ìSTICO SIMPLIFICADO E COMPAT√çVEL
-- Investigar vazamento de dados - vers√£o corrigida
-- ========================================

-- 1. VERIFICAR USU√ÅRIO ATUAL DA SESS√ÉO
SELECT 
    'üë§ USU√ÅRIO ATUAL' as info,
    auth.uid() as current_user_id,
    auth.email() as current_email,
    CASE 
        WHEN auth.uid() IS NULL THEN '‚ùå N√ÉO AUTENTICADO'
        ELSE '‚úÖ AUTENTICADO'
    END as auth_status;

-- 2. VERIFICAR STATUS RLS DE CADA TABELA
SELECT 
    'üîç STATUS RLS' as info,
    tablename,
    CASE WHEN rowsecurity THEN '‚úÖ ATIVO' ELSE '‚ùå INATIVO' END as rls_status
FROM pg_tables 
WHERE schemaname = 'public' 
  AND tablename IN ('produtos', 'clientes', 'vendas', 'vendas_itens', 'caixa', 'movimentacoes_caixa', 'ordens_servico')
ORDER BY tablename;

-- 3. VERIFICAR POL√çTICAS ATIVAS
SELECT 
    'üîë POL√çTICAS' as info,
    tablename,
    policyname,
    cmd as operacao
FROM pg_policies 
WHERE schemaname = 'public'
  AND tablename IN ('produtos', 'clientes', 'vendas', 'vendas_itens', 'caixa', 'movimentacoes_caixa', 'ordens_servico')
ORDER BY tablename, policyname;

-- 4. CONTAR REGISTROS TOTAIS vs VIS√çVEIS
SELECT 'PRODUTOS - TOTAL NA TABELA' as teste, COUNT(*) as total FROM produtos;
SELECT 'CLIENTES - TOTAL NA TABELA' as teste, COUNT(*) as total FROM clientes;
SELECT 'VENDAS - TOTAL NA TABELA' as teste, COUNT(*) as total FROM vendas;

-- 5. VERIFICAR DISTRIBUI√á√ÉO POR USER_ID
SELECT 
    'üì¶ PRODUTOS POR USER_ID' as info,
    CASE 
        WHEN user_id IS NULL THEN 'SEM DONO'
        WHEN user_id = auth.uid() THEN 'MEU'
        ELSE 'OUTRO USU√ÅRIO'
    END as ownership,
    COUNT(*) as quantidade
FROM produtos 
GROUP BY 
    CASE 
        WHEN user_id IS NULL THEN 'SEM DONO'
        WHEN user_id = auth.uid() THEN 'MEU'
        ELSE 'OUTRO USU√ÅRIO'
    END
ORDER BY quantidade DESC;

SELECT 
    'üë• CLIENTES POR USER_ID' as info,
    CASE 
        WHEN user_id IS NULL THEN 'SEM DONO'
        WHEN user_id = auth.uid() THEN 'MEU'
        ELSE 'OUTRO USU√ÅRIO'
    END as ownership,
    COUNT(*) as quantidade
FROM clientes 
GROUP BY 
    CASE 
        WHEN user_id IS NULL THEN 'SEM DONO'
        WHEN user_id = auth.uid() THEN 'MEU'
        ELSE 'OUTRO USU√ÅRIO'
    END
ORDER BY quantidade DESC;

-- 6. SAMPLE DE REGISTROS COM DETALHES
SELECT 
    'üìã SAMPLE PRODUTOS' as info,
    id,
    nome,
    user_id,
    CASE 
        WHEN user_id = auth.uid() THEN '‚úÖ MEU'
        WHEN user_id IS NULL THEN '‚ùå SEM DONO'
        ELSE '‚ö†Ô∏è OUTRO USU√ÅRIO'
    END as status
FROM produtos 
ORDER BY user_id NULLS FIRST
LIMIT 3;

SELECT 
    'üìã SAMPLE CLIENTES' as info,
    id,
    nome,
    user_id,
    CASE 
        WHEN user_id = auth.uid() THEN '‚úÖ MEU'
        WHEN user_id IS NULL THEN '‚ùå SEM DONO'
        ELSE '‚ö†Ô∏è OUTRO USU√ÅRIO'
    END as status
FROM clientes 
ORDER BY user_id NULLS FIRST
LIMIT 3;

-- 7. VERIFICAR SE H√Å BYPASS (USU√ÅRIO ADMIN)
SELECT 
    'üîì INFO SESS√ÉO' as info,
    current_user as db_user,
    session_user as session_user;

-- 8. TESTE FINAL - O QUE O FRONTEND EST√Å VENDO
SELECT 
    'üñ•Ô∏è TESTE FRONTEND' as info,
    'Produtos vis√≠veis' as tabela,
    COUNT(*) as registros
FROM produtos;

SELECT 
    'üñ•Ô∏è TESTE FRONTEND' as info,
    'Clientes vis√≠veis' as tabela,
    COUNT(*) as registros
FROM clientes;

SELECT 'üö® DIAGN√ìSTICO CONCLU√çDO!' as resultado;