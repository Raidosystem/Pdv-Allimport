-- ========================================
-- üö® DIAGN√ìSTICO √öNICO - TODOS RESULTADOS EM UMA TABELA
-- ========================================

WITH diagnostico AS (
  -- Informa√ß√µes b√°sicas
  SELECT 
    1 as ordem,
    'üë§ USU√ÅRIO ATUAL' as categoria,
    COALESCE(auth.email(), 'N√ÉO AUTENTICADO') as item,
    COALESCE(auth.uid()::text, 'NULL') as valor,
    CASE 
      WHEN auth.uid() IS NULL THEN '‚ùå PROBLEMA: SEM AUTENTICA√á√ÉO'
      ELSE '‚úÖ AUTENTICADO'
    END as status
  
  UNION ALL
  
  -- Status RLS das tabelas
  SELECT 
    2 as ordem,
    'üîç RLS STATUS' as categoria,
    tablename as item,
    CASE WHEN rowsecurity THEN 'ATIVO' ELSE 'INATIVO' END as valor,
    CASE WHEN rowsecurity THEN '‚úÖ OK' ELSE '‚ùå PROBLEMA: RLS DESATIVADO' END as status
  FROM pg_tables 
  WHERE schemaname = 'public' 
    AND tablename IN ('produtos', 'clientes', 'vendas', 'vendas_itens', 'caixa', 'movimentacoes_caixa', 'ordens_servico')
  
  UNION ALL
  
  -- Contagem de pol√≠ticas
  SELECT 
    3 as ordem,
    'üîë POL√çTICAS' as categoria,
    tablename as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ùå PROBLEMA: SEM POL√çTICAS'
      ELSE '‚úÖ TEM POL√çTICAS'
    END as status
  FROM pg_policies 
  WHERE schemaname = 'public'
    AND tablename IN ('produtos', 'clientes', 'vendas', 'vendas_itens', 'caixa', 'movimentacoes_caixa', 'ordens_servico')
  GROUP BY tablename
  
  UNION ALL
  
  -- Registros vis√≠veis
  SELECT 
    4 as ordem,
    'üñ•Ô∏è REGISTROS VIS√çVEIS' as categoria,
    'Produtos' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ö†Ô∏è NENHUM PRODUTO VIS√çVEL'
      WHEN COUNT(*) > 100 THEN '‚ùå MUITOS PRODUTOS (POSS√çVEL VAZAMENTO)'
      ELSE '‚úÖ QUANTIDADE NORMAL'
    END as status
  FROM produtos
  
  UNION ALL
  
  SELECT 
    4 as ordem,
    'üñ•Ô∏è REGISTROS VIS√çVEIS' as categoria,
    'Clientes' as item,
    COUNT(*)::text as valor,
    CASE 
      WHEN COUNT(*) = 0 THEN '‚ö†Ô∏è NENHUM CLIENTE VIS√çVEL'
      WHEN COUNT(*) > 100 THEN '‚ùå MUITOS CLIENTES (POSS√çVEL VAZAMENTO)'
      ELSE '‚úÖ QUANTIDADE NORMAL'
    END as status
  FROM clientes
  
  UNION ALL
  
  -- Info da sess√£o
  SELECT 
    5 as ordem,
    'üîì SESS√ÉO DATABASE' as categoria,
    'current_user' as item,
    current_user as valor,
    CASE 
      WHEN current_user = 'postgres' THEN '‚ùå PROBLEMA: EXECUTANDO COMO ADMIN (BYPASS RLS)'
      ELSE '‚úÖ USU√ÅRIO NORMAL'
    END as status
)

SELECT 
  categoria,
  item,
  valor,
  status
FROM diagnostico 
ORDER BY ordem, categoria, item;

-- Diagn√≥stico espec√≠fico de ownership
SELECT 
  'üìä OWNERSHIP PRODUTOS' as info,
  CASE 
    WHEN user_id IS NULL THEN '‚ùå SEM DONO'
    WHEN user_id = auth.uid() THEN '‚úÖ MEU'
    ELSE '‚ö†Ô∏è OUTRO USU√ÅRIO'
  END as ownership,
  COUNT(*) as quantidade
FROM produtos 
GROUP BY 
  CASE 
    WHEN user_id IS NULL THEN '‚ùå SEM DONO'
    WHEN user_id = auth.uid() THEN '‚úÖ MEU'
    ELSE '‚ö†Ô∏è OUTRO USU√ÅRIO'
  END
ORDER BY quantidade DESC;