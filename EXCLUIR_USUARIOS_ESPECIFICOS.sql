-- ============================================
-- EXCLUIR USU√ÅRIOS ESPEC√çFICOS COMPLETAMENTE
-- ============================================
-- Execute este script no SQL Editor do Supabase
-- Dashboard > SQL Editor > New Query

-- Lista de emails para excluir
DO $$ 
DECLARE
    emails_to_delete TEXT[] := ARRAY[
        'teste123@teste.com',
        'silviobritoempreendedor@gmail.com', 
        'admin@pdv.com',
        'marcovalentim04@gmail.com',
        'smartcellinova@gmail.com'
    ];
    email_item TEXT;
    user_uuid UUID;
BEGIN
    FOREACH email_item IN ARRAY emails_to_delete
    LOOP
        -- Buscar UUID do usu√°rio pelo email
        SELECT id INTO user_uuid 
        FROM auth.users 
        WHERE email = email_item;
        
        IF user_uuid IS NOT NULL THEN
            RAISE NOTICE 'Excluindo usu√°rio: % (ID: %)', email_item, user_uuid;
            
            -- ORDEM CORRETA: Excluir tabelas dependentes PRIMEIRO, depois as principais
            
            -- 1. Excluir itens de venda (dependem de vendas)
            BEGIN
                DELETE FROM public.itens_venda WHERE venda_id IN (SELECT id FROM public.vendas WHERE user_id = user_uuid);
                RAISE NOTICE '  ‚úì Removido itens de venda';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela itens_venda n√£o existe';
            END;
            
            -- 2. Excluir vendas_itens (dependem de vendas)
            BEGIN
                DELETE FROM public.vendas_itens WHERE venda_id IN (SELECT id FROM public.vendas WHERE user_id = user_uuid);
                RAISE NOTICE '  ‚úì Removido vendas_itens';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela vendas_itens n√£o existe';
            END;
            
            -- 3. Excluir movimenta√ß√µes de caixa (antes de caixa)
            BEGIN
                DELETE FROM public.movimentacoes_caixa WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido movimenta√ß√µes de caixa';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela movimentacoes_caixa n√£o existe';
            END;
            
            -- 4. Excluir vendas do usu√°rio
            BEGIN
                -- Primeiro, remover refer√™ncias de cliente das vendas
                UPDATE public.vendas SET cliente_id = NULL WHERE user_id = user_uuid;
                -- Depois excluir as vendas
                DELETE FROM public.vendas WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido vendas';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela vendas n√£o existe';
            END;
            
            -- 5. Excluir ordens de servi√ßo
            BEGIN
                DELETE FROM public.ordens_servico WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido ordens de servi√ßo';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela ordens_servico n√£o existe';
            END;
            
            -- 6. Excluir caixa
            BEGIN
                DELETE FROM public.caixa WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido caixa';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela caixa n√£o existe';
            END;
            
            -- 7. Excluir produtos (ANTES de categorias e clientes)
            BEGIN
                -- Remover a refer√™ncia de categoria APENAS dos produtos deste usu√°rio
                UPDATE public.produtos SET categoria_id = NULL WHERE user_id = user_uuid;
                -- Excluir os produtos
                DELETE FROM public.produtos WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido produtos';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela produtos n√£o existe';
            END;
            
            -- 8. Excluir categorias (DEPOIS de produtos)
            BEGIN
                -- Tentar excluir, mas se houver FK de outros usu√°rios, ignorar
                DELETE FROM public.categorias WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido categorias';
            EXCEPTION 
                WHEN undefined_table THEN
                    RAISE NOTICE '  ‚ö† Tabela categorias n√£o existe';
                WHEN foreign_key_violation THEN
                    -- Categorias sendo usadas por outros usu√°rios n√£o ser√£o exclu√≠das
                    RAISE NOTICE '  ‚ö† Categorias est√£o sendo usadas por outros usu√°rios, mantendo...';
            END;
            
            -- 9. Excluir clientes (DEPOIS de produtos)
            BEGIN
                -- Tentar excluir, mas se houver FK de outros usu√°rios, ignorar
                DELETE FROM public.clientes WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido clientes';
            EXCEPTION 
                WHEN undefined_table THEN
                    RAISE NOTICE '  ‚ö† Tabela clientes n√£o existe';
                WHEN foreign_key_violation THEN
                    -- Clientes sendo usados por outros usu√°rios n√£o ser√£o exclu√≠dos
                    RAISE NOTICE '  ‚ö† Clientes est√£o sendo usados por outros usu√°rios, mantendo...';
            END;
            
            -- 10. Excluir configura√ß√µes
            BEGIN
                DELETE FROM public.configuracoes WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido configura√ß√µes';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela configuracoes n√£o existe';
            END;
            
            -- 11. Excluir configura√ß√µes de impress√£o
            BEGIN
                DELETE FROM public.configuracoes_impressao WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido configura√ß√µes de impress√£o';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela configuracoes_impressao n√£o existe';
            END;
            
            -- 12. Excluir configura√ß√µes da empresa
            BEGIN
                DELETE FROM public.configuracoes_empresa WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido configura√ß√µes da empresa';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela configuracoes_empresa n√£o existe';
            END;
            
            -- 13. Excluir da tabela funcionarios
            BEGIN
                DELETE FROM public.funcionarios WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido de funcionarios';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela funcionarios n√£o existe';
            END;
            
            -- 14. Excluir da tabela empresas
            BEGIN
                DELETE FROM public.empresas WHERE user_id = user_uuid;
                RAISE NOTICE '  ‚úì Removido de empresas';
            EXCEPTION WHEN undefined_table THEN
                RAISE NOTICE '  ‚ö† Tabela empresas n√£o existe';
            END;
            
            -- 15. Excluir da tabela subscriptions
            DELETE FROM public.subscriptions WHERE user_id = user_uuid;
            RAISE NOTICE '  ‚úì Removido de subscriptions';
            
            -- 16. Excluir da tabela user_approvals
            DELETE FROM public.user_approvals WHERE user_id = user_uuid;
            RAISE NOTICE '  ‚úì Removido de user_approvals';
            
            -- 17. FINALMENTE excluir do auth.users (com prote√ß√£o contra FK)
            BEGIN
                DELETE FROM auth.users WHERE id = user_uuid;
                RAISE NOTICE '  ‚úì Removido de auth.users';
            EXCEPTION 
                WHEN foreign_key_violation THEN
                    -- Se houver FK que impedem exclus√£o, desabilitar a conta
                    RAISE NOTICE '  ‚ö† N√£o foi poss√≠vel excluir auth.users (FK constraints)';
                    RAISE NOTICE '  üîí Desabilitando conta do usu√°rio...';
                    -- Alterar email para invalidar login
                    UPDATE auth.users 
                    SET email = 'DELETED_' || user_uuid || '@deleted.invalid',
                        email_confirmed_at = NULL,
                        deleted_at = NOW()
                    WHERE id = user_uuid;
                    RAISE NOTICE '  ‚úì Conta desabilitada (n√£o pode mais fazer login)';
            END;
            
            RAISE NOTICE '‚úÖ Usu√°rio % processado completamente!', email_item;
        ELSE
            RAISE NOTICE '‚ùå Usu√°rio % n√£o encontrado', email_item;
        END IF;
    END LOOP;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ PROCESSO CONCLU√çDO!';
END $$;

-- Verificar se foram exclu√≠dos
SELECT 
    'Usu√°rios restantes:' as info,
    COUNT(*) as total
FROM auth.users;
