-- ============================================
-- LIMPAR TODAS AS POL√çTICAS DO BUCKET empresa-assets
-- Execute este SQL para remover pol√≠ticas duplicadas
-- ============================================

-- Remover todas as pol√≠ticas do bucket empresa-assets
DROP POLICY IF EXISTS "Allow authenticated deletes" ON storage.objects;
DROP POLICY IF EXISTS "Allow authenticated updates" ON storage.objects;
DROP POLICY IF EXISTS "Allow authenticated uploads" ON storage.objects;
DROP POLICY IF EXISTS "Allow public read" ON storage.objects;
DROP POLICY IF EXISTS "empresa_assets_delete" ON storage.objects;
DROP POLICY IF EXISTS "empresa_assets_insert" ON storage.objects;
DROP POLICY IF EXISTS "empresa_assets_select" ON storage.objects;
DROP POLICY IF EXISTS "empresa_assets_update" ON storage.objects;
DROP POLICY IF EXISTS "Leitura p√∫blica de logos" ON storage.objects;
DROP POLICY IF EXISTS "Permitir atualizar pr√≥prias logos" ON storage.objects;
DROP POLICY IF EXISTS "Permitir deletar pr√≥prias logos" ON storage.objects;
DROP POLICY IF EXISTS "Permitir upload de logos para usu√°rios autenticados" ON storage.objects;

-- Criar UMA √öNICA pol√≠tica permissiva e simples
CREATE POLICY "empresa_assets_acesso_total"
ON storage.objects
FOR ALL
TO public
USING (bucket_id = 'empresa-assets')
WITH CHECK (bucket_id = 'empresa-assets');

-- Verificar resultado
SELECT 
  policyname,
  cmd as operacao,
  CASE 
    WHEN roles::text LIKE '%public%' THEN 'üåê P√∫blico'
    WHEN roles::text LIKE '%authenticated%' THEN 'üîê Autenticado'
    ELSE roles::text
  END as quem_pode
FROM pg_policies 
WHERE tablename = 'objects' 
  AND schemaname = 'storage'
  AND policyname LIKE '%empresa%'
ORDER BY policyname;

SELECT '‚úÖ Pol√≠ticas limpas! Agora s√≥ existe uma pol√≠tica simples e permissiva.' as resultado;
