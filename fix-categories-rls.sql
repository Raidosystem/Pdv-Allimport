-- 游댢 SQL PARA CORRIGIR ERRO RLS DE CATEGORIAS
-- Execute este SQL no painel do Supabase (SQL Editor)

-- 1. Verificar se a tabela existe
SELECT table_name FROM information_schema.tables 
WHERE table_schema = 'public' AND table_name = 'categories';

-- 2. Criar tabela se n칚o existir
CREATE TABLE IF NOT EXISTS public.categories (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- 3. Criar 칤ndice para busca por nome
CREATE INDEX IF NOT EXISTS idx_categories_name ON public.categories(name);

-- 4. Habilitar RLS
ALTER TABLE public.categories ENABLE ROW LEVEL SECURITY;

-- 5. Remover TODAS as pol칤ticas antigas (IMPORTANTE!)
DROP POLICY IF EXISTS "Todos podem visualizar categorias" ON public.categories;
DROP POLICY IF EXISTS "Permitir leitura de categorias para usu치rios autenticados" ON public.categories;
DROP POLICY IF EXISTS "Usu치rios autenticados podem criar categorias" ON public.categories;
DROP POLICY IF EXISTS "Usu치rios autenticados podem editar categorias" ON public.categories;
DROP POLICY IF EXISTS "Usu치rios autenticados podem deletar categorias" ON public.categories;

-- 6. Criar pol칤ticas CORRETAS com TO authenticated
CREATE POLICY "Permitir leitura de categorias para usu치rios autenticados" 
ON public.categories 
FOR SELECT 
TO authenticated 
USING (true);

CREATE POLICY "Usu치rios autenticados podem criar categorias" 
ON public.categories 
FOR INSERT 
TO authenticated
WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Usu치rios autenticados podem editar categorias" 
ON public.categories 
FOR UPDATE 
TO authenticated
USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usu치rios autenticados podem deletar categorias" 
ON public.categories 
FOR DELETE 
TO authenticated
USING (auth.uid() IS NOT NULL);

-- 7. Inserir categorias padr칚o (m칠todo simples e seguro)
INSERT INTO public.categories (name, description) 
SELECT 'Eletr칪nicos', 'Produtos eletr칪nicos e tecnologia'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Eletr칪nicos');

INSERT INTO public.categories (name, description) 
SELECT 'Inform치tica', 'Computadores, perif칠ricos e acess칩rios'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Inform치tica');

INSERT INTO public.categories (name, description) 
SELECT 'Casa e Jardim', 'Produtos para casa e jardim'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Casa e Jardim');

INSERT INTO public.categories (name, description) 
SELECT 'Roupas e Acess칩rios', 'Vestu치rio e acess칩rios pessoais'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Roupas e Acess칩rios');

INSERT INTO public.categories (name, description) 
SELECT 'Esportes', 'Equipamentos e acess칩rios esportivos'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Esportes');

INSERT INTO public.categories (name, description) 
SELECT 'Livros', 'Livros e material de leitura'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Livros');

INSERT INTO public.categories (name, description) 
SELECT 'Sa칰de e Beleza', 'Produtos de sa칰de e cosm칠ticos'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Sa칰de e Beleza');

INSERT INTO public.categories (name, description) 
SELECT 'Alimenta칞칚o', 'Alimentos e bebidas'
WHERE NOT EXISTS (SELECT 1 FROM public.categories WHERE name = 'Alimenta칞칚o');

-- 8. Verificar se as pol칤ticas foram criadas
SELECT schemaname, tablename, policyname, permissive, roles, cmd, qual 
FROM pg_policies 
WHERE tablename = 'categories';

-- 9. Testar sele칞칚o
SELECT * FROM public.categories LIMIT 5;
