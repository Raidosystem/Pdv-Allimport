import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://kmcaaqetxtwkdcczdomw.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImttY2FhcWV0eHR3a2RjY3pkb213Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM5MjU3MDksImV4cCI6MjA2OTUwMTcwOX0.gFcUOoNPESqp2PALV5CYhMceTQ4HVuf-noGn94Fzbwg'

const supabase = createClient(supabaseUrl, supabaseKey)

async function forceEmailCleanAndResend() {
  const problemEmail = 'assistenciaallimport10@gmail.com'
  
  console.log('üîß DIAGN√ìSTICO AVAN√áADO DE EMAIL')
  console.log('================================')
  console.log(`üìß Email: ${problemEmail}`)
  console.log('')

  try {
    // 1. Fazer logout completo
    console.log('üîì Fazendo logout completo...')
    await supabase.auth.signOut()
    
    // 2. Tentar m√∫ltiplas tentativas de reenvio
    console.log('üì§ Tentativa 1: Reenvio direto...')
    let { error: resend1 } = await supabase.auth.resend({
      type: 'signup',
      email: problemEmail,
      options: {
        emailRedirectTo: 'https://pdv-allimport.vercel.app/confirm-email'
      }
    })
    
    if (resend1) {
      console.log(`‚ùå Tentativa 1 falhou: ${resend1.message}`)
      
      // 3. Se falhou, pode ser que o usu√°rio n√£o existe mais
      console.log('üë§ Tentativa 2: Criar usu√°rio novamente...')
      const { data: newUser, error: signupError } = await supabase.auth.signUp({
        email: problemEmail,
        password: 'NovaSenh@2025!',
        options: {
          emailRedirectTo: 'https://pdv-allimport.vercel.app/confirm-email',
          data: {
            name: 'Assist√™ncia Allimport',
            created_at: new Date().toISOString()
          }
        }
      })
      
      if (signupError) {
        console.log(`‚ùå Tentativa 2 falhou: ${signupError.message}`)
        
        if (signupError.message.includes('already registered')) {
          console.log('üîÑ Tentativa 3: For√ßar reenvio para usu√°rio existente...')
          
          const { error: forceResend } = await supabase.auth.resend({
            type: 'signup',
            email: problemEmail,
            options: {
              emailRedirectTo: 'https://pdv-allimport.vercel.app/confirm-email'
            }
          })
          
          if (forceResend) {
            console.log(`‚ùå Tentativa 3 falhou: ${forceResend.message}`)
          } else {
            console.log('‚úÖ Tentativa 3: Email reenviado com sucesso!')
          }
        }
      } else {
        console.log('‚úÖ Tentativa 2: Novo usu√°rio criado!')
        console.log(`üÜî ID: ${newUser.user?.id}`)
        console.log(`üìß Email: ${newUser.user?.email}`)
      }
    } else {
      console.log('‚úÖ Tentativa 1: Email reenviado com sucesso!')
    }
    
    // 4. Verificar diferentes configura√ß√µes de URL
    console.log('')
    console.log('üîç TESTANDO DIFERENTES URLs DE REDIRECIONAMENTO:')
    
    const redirectUrls = [
      'https://pdv-allimport.vercel.app/confirm-email',
      'https://pdv-allimport.vercel.app/',
      'https://pdv-allimport.vercel.app/dashboard'
    ]
    
    for (let i = 0; i < redirectUrls.length; i++) {
      const url = redirectUrls[i]
      console.log(`üîó Testando URL ${i + 1}: ${url}`)
      
      const { error: testError } = await supabase.auth.resend({
        type: 'signup',
        email: problemEmail,
        options: {
          emailRedirectTo: url
        }
      })
      
      if (testError) {
        console.log(`   ‚ùå Falhou: ${testError.message}`)
      } else {
        console.log(`   ‚úÖ Sucesso!`)
      }
      
      // Pequena pausa entre tentativas
      await new Promise(resolve => setTimeout(resolve, 1000))
    }
    
    // 5. Verificar se h√° problemas com o provedor de email
    console.log('')
    console.log('üìä DIAGN√ìSTICO FINAL:')
    console.log('‚Ä¢ M√∫ltiplas tentativas de envio realizadas')
    console.log('‚Ä¢ Diferentes URLs de redirecionamento testadas')
    console.log('‚Ä¢ Email pode estar em quarentena ou bloqueado')
    console.log('')
    console.log('üéØ SOLU√á√ïES ALTERNATIVAS:')
    console.log('1. Verifique pasta de spam/lixo eletr√¥nico')
    console.log('2. Aguarde at√© 10 minutos para entrega')
    console.log('3. Teste com email alternativo (@outlook.com, @yahoo.com)')
    console.log('4. Verifique se Gmail n√£o est√° bloqueando')
    console.log('5. Configure SMTP customizado no Supabase')

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message)
  }
}

// Executar diagn√≥stico
forceEmailCleanAndResend()
