#!/bin/bash
# Script de Verifica√ß√£o de Seguran√ßa - PDV AllImport
# Execute ap√≥s rotacionar todas as chaves

echo "üîí VERIFICA√á√ÉO DE SEGURAN√áA - PDV ALLIMPORT"
echo "==========================================="
echo ""

# 1. Verificar se n√£o h√° arquivos .env versionados
echo "1Ô∏è‚É£ Verificando arquivos .env versionados..."
if git ls-files | grep -E "\.env(\.|$)" | grep -v "\.env\.example"; then
    echo "‚ùå ERRO: Arquivos .env encontrados no Git!"
    echo "Execute: git rm -f .env* && git commit -m 'remove env files'"
    exit 1
else
    echo "‚úÖ Nenhum arquivo .env versionado"
fi

# 2. Verificar .gitignore
echo ""
echo "2Ô∏è‚É£ Verificando .gitignore..."
if grep -q "\.env" .gitignore && grep -q "\.env\.\*" .gitignore; then
    echo "‚úÖ .gitignore configurado corretamente"
else
    echo "‚ùå ERRO: .gitignore n√£o est√° protegendo arquivos .env"
    echo "Adicione: .env e .env.* ao .gitignore"
    exit 1
fi

# 3. Verificar vari√°veis de ambiente no c√≥digo
echo ""
echo "3Ô∏è‚É£ Verificando se SERVICE_ROLE_KEY n√£o est√° no frontend..."
if grep -r "VITE_SUPABASE_SERVICE_ROLE_KEY" src/ 2>/dev/null; then
    echo "‚ùå ERRO: SERVICE_ROLE_KEY encontrada no frontend!"
    echo "SERVICE_ROLE_KEY deve estar apenas em api/ (backend)"
    exit 1
else
    echo "‚úÖ SERVICE_ROLE_KEY n√£o encontrada no frontend"
fi

# 4. Verificar se h√° hardcoded secrets
echo ""
echo "4Ô∏è‚É£ Verificando secrets hardcoded..."
if grep -r -E "(eyJ|APP_USR-|sk_|pk_)" --include="*.ts" --include="*.js" --include="*.tsx" src/ api/ 2>/dev/null; then
    echo "‚ùå ERRO: Poss√≠veis secrets hardcoded encontrados!"
    exit 1
else
    echo "‚úÖ Nenhum secret hardcoded encontrado"
fi

# 5. Verificar estrutura de seguran√ßa
echo ""
echo "5Ô∏è‚É£ Verificando estrutura de seguran√ßa..."

# Webhook seguro existe?
if [ -f "api/webhooks/mercadopago-secure.ts" ]; then
    echo "‚úÖ Webhook seguro implementado"
else
    echo "‚ö†Ô∏è Webhook seguro n√£o encontrado"
fi

# Documenta√ß√£o de emerg√™ncia existe?
if [ -f "EMERGENCIA_SEGURANCA.md" ]; then
    echo "‚úÖ Documenta√ß√£o de emerg√™ncia presente"
else
    echo "‚ùå Documenta√ß√£o de emerg√™ncia n√£o encontrada"
fi

echo ""
echo "üéØ CHECKLIST DE ROTA√á√ÉO DE CHAVES:"
echo "=================================="
echo ""
echo "Supabase (https://supabase.com/dashboard):"
echo "  [ ] anon key rotacionada"
echo "  [ ] service_role key rotacionada"
echo "  [ ] JWT secret rotacionado (opcional)"
echo ""
echo "MercadoPago (https://www.mercadopago.com.br/developers/panel):"
echo "  [ ] Access Token rotacionado"
echo "  [ ] Public Key atualizada"
echo "  [ ] Webhook Secret rotacionado"
echo ""
echo "Vercel (https://vercel.com/raidosystem/pdv-allimport/settings/environment-variables):"
echo "  [ ] Vari√°veis antigas deletadas"
echo "  [ ] Novas vari√°veis configuradas"
echo "  [ ] Redeploy realizado"
echo ""
echo "GitHub (https://github.com/Raidosystem/Pdv-Allimport/settings/security_analysis):"
echo "  [ ] Secret scanning ativado"
echo "  [ ] Push Protection ativado"
echo ""
echo "üö® IMPORTANTE: Teste o sistema ap√≥s rotacionar todas as chaves!"
echo "üö® URL do sistema: https://pdv.crmvsystem.com"
echo ""
echo "‚úÖ Verifica√ß√£o de seguran√ßa conclu√≠da!"