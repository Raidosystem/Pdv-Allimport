// Teste da configura√ß√£o do Supabase no frontend
console.log('üîß TESTE DE CONFIGURA√á√ÉO SUPABASE NO FRONTEND');
console.log('');

// Verificar se as vari√°veis est√£o dispon√≠veis
console.log('üìã VARI√ÅVEIS DE AMBIENTE:');
console.log('VITE_SUPABASE_URL:', import.meta.env?.VITE_SUPABASE_URL || 'UNDEFINED');
console.log('VITE_SUPABASE_ANON_KEY:', import.meta.env?.VITE_SUPABASE_ANON_KEY ? 'PRESENTE' : 'UNDEFINED');

// Importar cliente do Supabase
import { supabase } from './src/lib/supabase.ts';

console.log('');
console.log('üì° TESTANDO CONEX√ÉO COM SUPABASE:');

// Teste simples de conex√£o
try {
  const { data, error } = await supabase
    .from('user_approvals')
    .select('count(*)')
    .limit(1);
    
  if (error) {
    console.error('‚ùå ERRO na conex√£o:', error.message);
    console.error('Detalhes:', error);
  } else {
    console.log('‚úÖ Conex√£o com Supabase OK');
    console.log('Dados recebidos:', data);
  }
} catch (err) {
  console.error('‚ùå ERRO GERAL:', err);
}

// Teste espec√≠fico da query de funcion√°rios
console.log('');
console.log('üë• TESTANDO QUERY DE FUNCION√ÅRIOS:');

const ownerID = 'f7fdf4cf-7101-45ab-86db-5248a7ac58c1';

try {
  const { data: employees, error: empError } = await supabase
    .from('user_approvals')
    .select('*')
    .eq('parent_user_id', ownerID)
    .eq('user_role', 'employee')
    .eq('status', 'approved')
    .order('created_at', { ascending: false });

  if (empError) {
    console.error('‚ùå ERRO na query de funcion√°rios:', empError.message);
    console.error('C√≥digo do erro:', empError.code);
    console.error('Detalhes:', empError.details);
  } else {
    console.log('‚úÖ Query de funcion√°rios OK');
    console.log('üë• Funcion√°rios encontrados:', employees?.length || 0);
    
    if (employees && employees.length > 0) {
      employees.forEach((emp, index) => {
        console.log(`${index + 1}. ${emp.full_name} (${emp.email})`);
      });
    }
  }
} catch (err) {
  console.error('‚ùå ERRO GERAL na query:', err);
}
